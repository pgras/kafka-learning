---
version: '3'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.2.1
    hostname: zookeeper-1
    container_name: zookeeper-1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_HEAP_OPTS: -Xms32M -Xmx32M -verbose:gc
    # volumes:
    #  - ./cp/zookeeper/data:/var/lib/zookeeper/data
    #  - ./cp/zookeeper/log:/var/lib/zookeeper/log
    #  - ./cp/zookeeper/secrets:/etc/zookeeper/secrets

  kafka-1:
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka-1
    container_name: kafka-1
    depends_on:
      - zookeeper-1
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_HEAP_OPTS: -Xms512M -Xmx512M -verbose:gc
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_SUPPORT_METRICS.ENABLE: 'false'
    # volumes:
    #  - ./cp/kafka/data:/var/lib/kafka/data

  schema-registry-1:
    image: confluentinc/cp-schema-registry:5.2.1
    hostname: schema-registry-1
    container_name: schema-registry-1
    depends_on:
      - zookeeper-1
      - kafka-1
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry-1:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper-1:2181"
    # volumes:
    #  - ./cp/scema-registry/secrets:/etc/schema-registry/secrets

  kafkahq-1:
    image: tchiotludo/kafkahq
    hostname: kafkahq-1
    container_name: kafkahq-1
    depends_on:
      - zookeeper-1
      - kafka-1
      - schema-registry-1
    ports:
      - 8080:8080
    environment:
      KAFKAHQ_CONFIGURATION: |
        kafkahq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka-1:29092"
              schema-registry: "schema-registry-1:8081"
